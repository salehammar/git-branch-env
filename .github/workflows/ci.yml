name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node.js ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test
    
    - name: Run CI integration tests
      run: npm run test:ci
    
    - name: Run encryption tests
      run: npm run test:encryption
    
    - name: Run all tests
      run: npm run test:all
    
    - name: Lint code
      run: npm run lint
    
    - name: Check package size
      run: npm pack --dry-run

  security:
    name: Security audit
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Check for vulnerabilities
      run: npm audit --audit-level=high

  publish:
    name: Publish to npm
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run final tests
      run: npm run test:all
    
    - name: Lint code
      run: npm run lint
    
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.git_branch_env }}
    
    - name: Create GitHub release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## ðŸš€ git-branch-env ${{ github.ref_name }}
          
          ### âœ¨ What's New
          - Branch-aware environment loading
          - CI/CD integration support
          - Encryption with passphrase generation
          - Team collaboration workflows
          - Comprehensive testing suite
          
          ### ðŸ“¦ Installation
          ```bash
          npm install git-branch-env
          ```
          
          ### ðŸ”— Links
          - [Documentation](https://github.com/salehammar/git-branch-env#readme)
          - [npm Package](https://www.npmjs.com/package/git-branch-env)
        draft: false
        prerelease: false
